{"version":3,"sources":["webpack:///./assets/js/theme/product.js","webpack:///./node_modules/lodash/toString.js","webpack:///./assets/js/theme/common/models/forms.js","webpack:///./assets/js/theme/common/form-utils.js","webpack:///./node_modules/lodash/capitalize.js","webpack:///./node_modules/lodash/_hasUnicode.js","webpack:///./node_modules/lodash/includes.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/lodash/camelCase.js","webpack:///./node_modules/lodash/_baseIndexOf.js","webpack:///./node_modules/lodash/upperFirst.js","webpack:///./node_modules/lodash/_createCaseFirst.js","webpack:///./node_modules/lodash/_castSlice.js","webpack:///./node_modules/lodash/_baseSlice.js","webpack:///./node_modules/lodash/_stringToArray.js","webpack:///./node_modules/lodash/_asciiToArray.js","webpack:///./node_modules/lodash/_unicodeToArray.js","webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_unicodeWords.js","webpack:///./assets/js/theme/product/reviews.js","webpack:///./assets/js/theme/product/video-gallery.js","webpack:///./assets/js/theme/f/selected-option.js"],"names":["Product","context","url","window","location","href","$reviewLink","$","onReady","validator","document","on","indexOf","history","replaceState","title","pathname","collapsibleFactory","this","productDetails","ProductDetails","BCData","product_attributes","setProductVariant","videoGallery","$reviewForm","classifyForm","review","Review","registerValidation","performCheck","areAll","enableSelectedOptionLabel","selectedOption","require","productReviewHandler","trigger","PageManager","module","exports","value","forms","email","test","password","notEmpty","length","inputTagNames","formSelector","options","$form","$inputs","find","join","formFieldClass","each","__","input","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","addClass","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","type","name","$field","fieldId","match","getFieldId","after","Validators","setEmailValidation","field","add","selector","validate","cb","val","errorMessage","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","data","Object","keys","nod","classes","forEach","hasClass","removeClass","toString","upperFirst","string","reHasUnicode","baseIndexOf","array","global","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","tiRE","piRE","fiU","undefined","constructor","source","call","proxy","key","configurable","get","set","it","i","capitalize","camelCase","createCompounder","word","index","fromIndex","createCaseFirst","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","slice","baseSlice","start","end","Array","asciiToArray","unicodeToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","rsSymbol","reUnicode","arrayReduce","deburr","words","reApos","callback","replace","iteratee","accumulator","initAccum","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","reAsciiWord","reHasUnicodeWord","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsUpper","rsMiscLower","rsMiscUpper","rsModifier","rsEmoji","reUnicodeWord","submit","$reviewsContent","$collapsible","initLinkBind","injectPaginationLink","collapseReviews","$content","CollapsibleEvents","click","hash","$nextLink","$prevLink","attr","reviewRating","reviewSubject","reviewComment","reviewEmail","VideoGallery","$element","$player","$videos","currentVideo","bindEvents","selectNewVideo","e","preventDefault","$target","currentTarget","id","$selectedThumb","setMainVideo","setActiveThumb","bind","element","$el","$selectedOptionLabel","$selectedOption","$src","changeLabel","siblings","children","text"],"mappings":"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","file":"theme-bundle.chunk.2.js","sourcesContent":["/*\r\n Import all product specific js\r\n */\r\nimport PageManager from './page-manager';\r\nimport Review from './product/reviews';\r\nimport collapsibleFactory from './common/collapsible';\r\nimport ProductDetails from './common/product-details';\r\nimport videoGallery from './product/video-gallery';\r\nimport { classifyForm } from './common/form-utils';\r\nimport selectedOption from './f/selected-option';\r\n\r\nexport default class Product extends PageManager {\r\n    constructor(context) {\r\n        super(context);\r\n        this.url = window.location.href;\r\n        this.$reviewLink = $('[data-reveal-id=\"modal-review-form\"]');\r\n    }\r\n\r\n    onReady() {\r\n        // Listen for foundation modal close events to sanitize URL after review.\r\n        $(document).on('close.fndtn.reveal', () => {\r\n            if (this.url.indexOf('#write_review') !== -1 && typeof window.history.replaceState === 'function') {\r\n                window.history.replaceState(null, document.title, window.location.pathname);\r\n            }\r\n        });\r\n\r\n        let validator;\r\n\r\n        // Init collapsible\r\n        collapsibleFactory();\r\n\r\n        this.productDetails = new ProductDetails($('.productView'), this.context, window.BCData.product_attributes);\r\n        this.productDetails.setProductVariant();\r\n\r\n        videoGallery();\r\n\r\n        const $reviewForm = classifyForm('.writeReview-form');\r\n        const review = new Review($reviewForm);\r\n\r\n        $('body').on('click', '[data-reveal-id=\"modal-review-form\"]', () => {\r\n            validator = review.registerValidation(this.context);\r\n        });\r\n\r\n        $reviewForm.on('submit', () => {\r\n            if (validator) {\r\n                validator.performCheck();\r\n                return validator.areAll('valid');\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        if (this.context.enableSelectedOptionLabel) {\r\n            selectedOption();\r\n        }\r\n\r\n        const Sticky = require('sticky-js');\r\n        const sticky = new Sticky('.sticky-product'); // eslint-disable-line no-unused-vars\r\n\r\n        this.productReviewHandler();\r\n    }\r\n\r\n    productReviewHandler() {\r\n        if (this.url.indexOf('#write_review') !== -1) {\r\n            this.$reviewLink.trigger('click');\r\n        }\r\n    }\r\n}\r\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","const forms = {\r\n    email(value) {\r\n        const re = /^.+@.+\\..+/;\r\n        return re.test(value);\r\n    },\r\n\r\n    /**\r\n     * Validates a password field\r\n     * @param value\r\n     * @returns {boolean}\r\n     */\r\n    password(value) {\r\n        return this.notEmpty(value);\r\n    },\r\n\r\n    /**\r\n     * validates if a field is empty\r\n     * @param value\r\n     * @returns {boolean}\r\n     *\r\n     */\r\n    notEmpty(value) {\r\n        return value.length > 0;\r\n    },\r\n};\r\n\r\nexport default forms;\r\n","import _ from 'lodash';\r\nimport nod from './nod';\r\nimport forms from './models/forms';\r\n\r\nconst inputTagNames = [\r\n    'input',\r\n    'select',\r\n    'textarea',\r\n];\r\n\r\n/**\r\n * Apply class name to an input element on its type\r\n * @param {object} input\r\n * @param {string} formFieldClass\r\n * @return {object} Element itself\r\n */\r\nfunction classifyInput(input, formFieldClass) {\r\n    const $input = $(input);\r\n    const $formField = $input.parent(`.${formFieldClass}`);\r\n    const tagName = $input.prop('tagName').toLowerCase();\r\n\r\n    let className = `${formFieldClass}--${tagName}`;\r\n    let specificClassName;\r\n\r\n    // Input can be text/checkbox/radio etc...\r\n    if (tagName === 'input') {\r\n        const inputType = $input.prop('type');\r\n\r\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\r\n            // ie: .form-field--checkbox, .form-field--radio\r\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\r\n        } else {\r\n            // ie: .form-field--input .form-field--inputText\r\n            specificClassName = `${className}${_.capitalize(inputType)}`;\r\n        }\r\n    }\r\n\r\n    // Apply class modifier\r\n    return $formField\r\n        .addClass(className)\r\n        .addClass(specificClassName);\r\n}\r\n\r\n/**\r\n * Apply class name to each input element in a form based on its type\r\n * @example\r\n * // Before\r\n * <form id=\"form\">\r\n *     <div class=\"form-field\">\r\n *         <input type=\"text\">\r\n *     </div>\r\n *     <div class=\"form-field\">\r\n *         <select>...</select>\r\n *     </div>\r\n * </form>\r\n *\r\n * classifyForm('#form', { formFieldClass: 'form-field' });\r\n *\r\n * // After\r\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\r\n * <div class=\"form-field form-field--select\">...</div>\r\n *\r\n * @param {string|object} formSelector - selector or element\r\n * @param {object} options\r\n * @return {jQuery} Element itself\r\n */\r\nexport function classifyForm(formSelector, options = {}) {\r\n    const $form = $(formSelector);\r\n    const $inputs = $form.find(inputTagNames.join(', '));\r\n\r\n    // Obtain options\r\n    const { formFieldClass = 'form-field' } = options;\r\n\r\n    // Classify each input in a form\r\n    $inputs.each((__, input) => {\r\n        classifyInput(input, formFieldClass);\r\n    });\r\n\r\n    return $form;\r\n}\r\n\r\n/**\r\n * Get id from given field\r\n * @param {object} $field JQuery field object\r\n * @return {string}\r\n */\r\nfunction getFieldId($field) {\r\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\r\n\r\n    if (fieldId && fieldId.length !== 0) {\r\n        return fieldId[0];\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\n/**\r\n * Insert hidden field after State/Province field\r\n * @param {object} $stateField JQuery field object\r\n */\r\nfunction insertStateHiddenField($stateField) {\r\n    const fieldId = getFieldId($stateField);\r\n    const stateFieldAttrs = {\r\n        type: 'hidden',\r\n        name: `FormFieldIsText${fieldId}`,\r\n        value: '1',\r\n    };\r\n\r\n    $stateField.after($('<input />', stateFieldAttrs));\r\n}\r\n\r\nconst Validators = {\r\n    /**\r\n     * Sets up a new validation when the form is dirty\r\n     * @param validator\r\n     * @param field\r\n     */\r\n    setEmailValidation: (validator, field) => {\r\n        if (field) {\r\n            validator.add({\r\n                selector: field,\r\n                validate: (cb, val) => {\r\n                    const result = forms.email(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a valid email.',\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Validate password fields\r\n     * @param validator\r\n     * @param passwordSelector\r\n     * @param password2Selector\r\n     * @param requirements\r\n     * @param isOptional\r\n     */\r\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\r\n        const $password = $(passwordSelector);\r\n        const passwordValidations = [\r\n            {\r\n                selector: passwordSelector,\r\n                validate: (cb, val) => {\r\n                    const result = val.length;\r\n\r\n                    if (isOptional) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a password.',\r\n            },\r\n            {\r\n                selector: passwordSelector,\r\n                validate: (cb, val) => {\r\n                    const result = val.match(new RegExp(requirements.alpha))\r\n                        && val.match(new RegExp(requirements.numeric))\r\n                        && val.length >= requirements.minlength;\r\n\r\n                    // If optional and nothing entered, it is valid\r\n                    if (isOptional && val.length === 0) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: requirements.error,\r\n            },\r\n            {\r\n                selector: password2Selector,\r\n                validate: (cb, val) => {\r\n                    const result = val.length;\r\n\r\n                    if (isOptional) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a password.',\r\n            },\r\n            {\r\n                selector: password2Selector,\r\n                validate: (cb, val) => {\r\n                    const result = val === $password.val();\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'Your passwords do not match.',\r\n            },\r\n        ];\r\n\r\n        validator.add(passwordValidations);\r\n    },\r\n\r\n    /**\r\n     * Validate password fields\r\n     * @param {Nod} validator\r\n     * @param {Object} selectors\r\n     * @param {string} selectors.errorSelector\r\n     * @param {string} selectors.fieldsetSelector\r\n     * @param {string} selectors.formSelector\r\n     * @param {string} selectors.maxPriceSelector\r\n     * @param {string} selectors.minPriceSelector\r\n     */\r\n    setMinMaxPriceValidation: (validator, selectors) => {\r\n        const {\r\n            errorSelector,\r\n            fieldsetSelector,\r\n            formSelector,\r\n            maxPriceSelector,\r\n            minPriceSelector,\r\n        } = selectors;\r\n\r\n        validator.configure({\r\n            form: formSelector,\r\n            preventSubmit: true,\r\n            successClass: '_', // KLUDGE: Don't apply success class\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min price must be less than max. price.',\r\n            selector: minPriceSelector,\r\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min price must be less than max. price.',\r\n            selector: maxPriceSelector,\r\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Max. price is required.',\r\n            selector: maxPriceSelector,\r\n            validate: 'presence',\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min. price is required.',\r\n            selector: minPriceSelector,\r\n            validate: 'presence',\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Input must be greater than 0.',\r\n            selector: [minPriceSelector, maxPriceSelector],\r\n            validate: 'min-number:0',\r\n        });\r\n\r\n        validator.setMessageOptions({\r\n            selector: [minPriceSelector, maxPriceSelector],\r\n            parent: fieldsetSelector,\r\n            errorSpan: errorSelector,\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets up a new validation when the form is dirty\r\n     * @param validator\r\n     * @param field\r\n     */\r\n    setStateCountryValidation: (validator, field) => {\r\n        if (field) {\r\n            validator.add({\r\n                selector: field,\r\n                validate: 'presence',\r\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes classes from dirty form if previously checked\r\n     * @param field\r\n     */\r\n    cleanUpStateValidation: (field) => {\r\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\r\n\r\n        Object.keys(nod.classes).forEach((value) => {\r\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\r\n                $fieldClassElement.removeClass(nod.classes[value]);\r\n            }\r\n        });\r\n    },\r\n};\r\n\r\nexport { Validators, insertStateHiddenField };\r\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","var capitalize = require('./capitalize'),\n    createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\nmodule.exports = camelCase;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","import nod from '../common/nod';\r\nimport { CollapsibleEvents } from '../common/collapsible';\r\nimport forms from '../common/models/forms';\r\n\r\nexport default class {\r\n    constructor($reviewForm) {\r\n        this.validator = nod({\r\n            submit: $reviewForm.find('input[type=\"submit\"]'),\r\n        });\r\n\r\n        this.$reviewsContent = $('#product-reviews');\r\n        this.$collapsible = $('[data-collapsible]', this.$reviewsContent);\r\n\r\n        this.initLinkBind();\r\n        this.injectPaginationLink();\r\n        this.collapseReviews();\r\n    }\r\n\r\n    /**\r\n     * On initial page load, the user clicks on \"(12 Reviews)\" link\r\n     * The browser jumps to the review page and should expand the reviews section\r\n     */\r\n    initLinkBind() {\r\n        const $content = $('#productReviews-content', this.$reviewsContent);\r\n\r\n        $('.productView-reviewLink').on('click', () => {\r\n            if (!$content.hasClass('is-open')) {\r\n                this.$collapsible.trigger(CollapsibleEvents.click);\r\n            }\r\n        });\r\n    }\r\n\r\n    collapseReviews() {\r\n        // We're in paginating state, do not collapse\r\n        if (window.location.hash && window.location.hash.indexOf('#product-reviews') === 0) {\r\n            return;\r\n        }\r\n\r\n        // force collapse on page load\r\n        this.$collapsible.trigger(CollapsibleEvents.click);\r\n    }\r\n\r\n    /**\r\n     * Inject ID into the pagination link\r\n     */\r\n    injectPaginationLink() {\r\n        const $nextLink = $('.pagination-item--next .pagination-link', this.$reviewsContent);\r\n        const $prevLink = $('.pagination-item--previous .pagination-link', this.$reviewsContent);\r\n\r\n        if ($nextLink.length) {\r\n            $nextLink.attr('href', `${$nextLink.attr('href')} #product-reviews`);\r\n        }\r\n\r\n        if ($prevLink.length) {\r\n            $prevLink.attr('href', `${$prevLink.attr('href')} #product-reviews`);\r\n        }\r\n    }\r\n\r\n    registerValidation(context) {\r\n        this.context = context;\r\n        this.validator.add([{\r\n            selector: '[name=\"revrating\"]',\r\n            validate: 'presence',\r\n            errorMessage: this.context.reviewRating,\r\n        }, {\r\n            selector: '[name=\"revtitle\"]',\r\n            validate: 'presence',\r\n            errorMessage: this.context.reviewSubject,\r\n        }, {\r\n            selector: '[name=\"revtext\"]',\r\n            validate: 'presence',\r\n            errorMessage: this.context.reviewComment,\r\n        }, {\r\n            selector: '[name=\"email\"]',\r\n            validate: (cb, val) => {\r\n                const result = forms.email(val);\r\n                cb(result);\r\n            },\r\n            errorMessage: this.context.reviewEmail,\r\n        }]);\r\n\r\n        return this.validator;\r\n    }\r\n\r\n    validate() {\r\n        return this.validator.performCheck();\r\n    }\r\n}\r\n","export class VideoGallery {\r\n    constructor($element) {\r\n        this.$player = $element.find('[data-video-player]');\r\n        this.$videos = $element.find('[data-video-item]');\r\n        this.currentVideo = {};\r\n        this.bindEvents();\r\n    }\r\n\r\n    selectNewVideo(e) {\r\n        e.preventDefault();\r\n\r\n        const $target = $(e.currentTarget);\r\n\r\n        this.currentVideo = {\r\n            id: $target.data('videoId'),\r\n            $selectedThumb: $target,\r\n        };\r\n\r\n        this.setMainVideo();\r\n        this.setActiveThumb();\r\n    }\r\n\r\n    setMainVideo() {\r\n        this.$player.attr('src', `//www.youtube.com/embed/${this.currentVideo.id}`);\r\n    }\r\n\r\n    setActiveThumb() {\r\n        this.$videos.removeClass('is-active');\r\n        this.currentVideo.$selectedThumb.addClass('is-active');\r\n    }\r\n\r\n    bindEvents() {\r\n        this.$videos.on('click', this.selectNewVideo.bind(this));\r\n    }\r\n}\r\n\r\nexport default function videoGallery() {\r\n    const pluginKey = 'video-gallery';\r\n    const $videoGallery = $(`[data-${pluginKey}]`);\r\n\r\n    $videoGallery.each((index, element) => {\r\n        const $el = $(element);\r\n        const isInitialized = $el.data(pluginKey) instanceof VideoGallery;\r\n\r\n        if (isInitialized) {\r\n            return;\r\n        }\r\n\r\n        $el.data(pluginKey, new VideoGallery($el));\r\n    });\r\n}\r\n","export default function () {\r\n    const $src = $('.show-selected-option input');\r\n    const $selected = $('.show-selected-option input[checked]');\r\n    let $selectedOptionLabel;\r\n    let $selectedOption;\r\n\r\n    function changeLabel() {\r\n        $selectedOptionLabel = $(this).siblings().children('span[data-option-value]');\r\n        $selectedOption = $(this).attr('data-option-label');\r\n\r\n        $selectedOptionLabel.text($selectedOption);\r\n    }\r\n\r\n    $selected.each(changeLabel);\r\n    $src.on('click', changeLabel);\r\n}\r\n"],"sourceRoot":""}