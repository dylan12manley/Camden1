{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/common/models/forms.js","webpack:///./assets/js/theme/common/form-utils.js","webpack:///./assets/js/theme/common/url-utils.js","webpack:///./assets/js/theme/global/compare-products.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","formatCategoryTreeForJSTree","node","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","url","urlUtils","replaceParams","window","location","href","section","this","$contentResultsContainer","addClass","$productListingContainer","removeClass","$facetedSearchContainer","$productSideCart","$productOptions","$productPagination","$","searchGoToUrl","context","enableSideCart","sideCart","showContent","onReady","compareProducts","urls","$searchForm","$categoryTreeContainer","find","Url","parse","treeData","length","initFacetedSearch","onSortBySubmit","bind","hooks","on","cardAddToCart","gridSwitcher","collapsibleFactory","event","preventDefault","query","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","categoryId","input","type","name","value","append","loadTreeNodes","cb","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","done","formattedResults","dataNode","$container","treeOptions","core","themes","icons","checkbox","three_state","plugins","$searchHeading","$searchCount","requestOptions","template","productListing","sidebar","heading","productCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","animate","scrollTop","$form","nod","submit","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage","forms","email","test","password","notEmpty","inputTagNames","classifyForm","formSelector","options","$inputs","join","formFieldClass","each","__","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","$field","fieldId","match","getFieldId","after","Validators","setEmailValidation","field","val","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","Object","keys","classes","hasClass","getUrl","pathname","search","goToUrl","history","pushState","document","title","trigger","params","param","parsed","hasOwnProperty","format","buildQueryString","queryData","key","out","Array","isArray","ndx","substring","updateCounterNav","counter","$link","urlContext","is","attr","compare","products","$checked","$compareLink","element","compareCounter","item","product","currentTarget","$clickedCompareLink","checked","index","indexOf","splice","decrementCounter","showAlertModal","queryParams","serialize","split","page","PageManager","callback","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","collapsedFacets","collapsedFacetItems","initPriceValidator","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","setTimeout","collapseAllFacets","onpopstate","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","api","getPage","err","hide","Error","expandFacetItems","$navList","hasMoreResults","toggleFacetItems","getMoreFacetResults","facet","facetUrl","list_all","response","open","updateContent","$items","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","priceRangeValidator","unbindEvents","off","stopPropagation","$toggle","toggleClass","constants","VALID","decodeURI"],"mappings":"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","file":"theme-bundle.chunk.9.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\r\nimport CatalogPage from './catalog';\r\nimport FacetedSearch from './common/faceted-search';\r\nimport compareProducts from './global/compare-products';\r\nimport urlUtils from './common/url-utils';\r\nimport Url from 'url';\r\nimport collapsibleFactory from './common/collapsible';\r\nimport 'jstree';\r\nimport nod from './common/nod';\r\nimport cardAddToCart from './f/card-add-to-cart';\r\nimport sideCart from './f/side-cart';\r\nimport gridSwitcher from './f/grid-list-switcher';\r\n\r\nexport default class Search extends CatalogPage {\r\n    formatCategoryTreeForJSTree(node) {\r\n        const nodeData = {\r\n            text: node.data,\r\n            id: node.metadata.id,\r\n            state: {\r\n                selected: node.selected,\r\n            },\r\n        };\r\n\r\n        if (node.state) {\r\n            nodeData.state.opened = node.state === 'open';\r\n            nodeData.children = true;\r\n        }\r\n\r\n        if (node.children) {\r\n            nodeData.children = [];\r\n            node.children.forEach((childNode) => {\r\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\r\n            });\r\n        }\r\n\r\n        return nodeData;\r\n    }\r\n\r\n    showProducts() {\r\n        const url = urlUtils.replaceParams(window.location.href, {\r\n            section: 'product',\r\n        });\r\n\r\n        this.$contentResultsContainer.addClass('category--hide');\r\n\r\n        this.$productListingContainer.removeClass('category--hide');\r\n        this.$facetedSearchContainer.removeClass('category--hide');\r\n        this.$productSideCart.removeClass('category--hide');\r\n        this.$productOptions.removeClass('category--hide');\r\n        this.$productPagination.removeClass('category--hide');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-content-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action');\r\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        urlUtils.searchGoToUrl(url);\r\n\r\n        if (this.context.enableSideCart) {\r\n            sideCart();\r\n        }\r\n    }\r\n\r\n    showContent() {\r\n        const url = urlUtils.replaceParams(window.location.href, {\r\n            section: 'content',\r\n        });\r\n\r\n        this.$contentResultsContainer.removeClass('category--hide');\r\n\r\n        this.$productListingContainer.addClass('category--hide');\r\n        this.$facetedSearchContainer.addClass('category--hide');\r\n        this.$productSideCart.addClass('category--hide');\r\n        this.$productOptions.addClass('category--hide');\r\n        this.$productPagination.addClass('category--hide');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-product-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action');\r\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        urlUtils.searchGoToUrl(url);\r\n\r\n        if (this.context.enableSideCart) {\r\n            sideCart();\r\n        }\r\n    }\r\n\r\n    onReady() {\r\n        compareProducts(this.context.urls);\r\n\r\n        const $searchForm = $('[data-advanced-search-form]');\r\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\r\n        const url = Url.parse(window.location.href, true);\r\n        const treeData = [];\r\n\r\n        this.$contentResultsContainer = $('#search-results-content');\r\n\r\n        this.$productListingContainer = $('#product-listing-container');\r\n        this.$facetedSearchContainer = $('#faceted-search-container');\r\n        this.$productSideCart = $('.product-sidecart');\r\n        this.$productOptions = $('#product-options');\r\n        this.$productPagination = $('#product-pagination');\r\n\r\n        // Init faceted search\r\n        if ($('#facetedSearch').length > 0) {\r\n            this.initFacetedSearch();\r\n        } else {\r\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n        }\r\n\r\n        if (this.context.enableSideCart) {\r\n            sideCart();\r\n        }\r\n\r\n        cardAddToCart();\r\n\r\n        gridSwitcher(this.context);\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        $('[data-product-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showProducts();\r\n        });\r\n\r\n        $('[data-content-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showContent();\r\n        });\r\n\r\n        if (this.$productListingContainer.find('li.productCard').length === 0 || url.query.section === 'content') {\r\n            this.showContent();\r\n        } else {\r\n            this.showProducts();\r\n        }\r\n\r\n        const validator = this.initValidation($searchForm)\r\n            .bindValidation($searchForm.find('#search_query_adv'));\r\n\r\n        this.context.categoryTree.forEach((node) => {\r\n            treeData.push(this.formatCategoryTreeForJSTree(node));\r\n        });\r\n\r\n        this.categoryTreeData = treeData;\r\n        this.createCategoryTree($categoryTreeContainer);\r\n\r\n        $searchForm.on('submit', event => {\r\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\r\n\r\n            if (!validator.check()) {\r\n                return event.preventDefault();\r\n            }\r\n\r\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\r\n\r\n            for (const categoryId of selectedCategoryIds) {\r\n                const input = $('<input>', {\r\n                    type: 'hidden',\r\n                    name: 'category[]',\r\n                    value: categoryId,\r\n                });\r\n\r\n                $searchForm.append(input);\r\n            }\r\n        });\r\n    }\r\n\r\n    loadTreeNodes(node, cb) {\r\n        $.ajax({\r\n            url: '/remote/v1/category-tree',\r\n            data: {\r\n                selectedCategoryId: node.id,\r\n                prefix: 'category',\r\n            },\r\n            headers: {\r\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\r\n            },\r\n        }).done(data => {\r\n            const formattedResults = [];\r\n\r\n            data.forEach((dataNode) => {\r\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\r\n            });\r\n\r\n            cb(formattedResults);\r\n        });\r\n    }\r\n\r\n    createCategoryTree($container) {\r\n        const treeOptions = {\r\n            core: {\r\n                data: (node, cb) => {\r\n                    // Root node\r\n                    if (node.id === '#') {\r\n                        cb(this.categoryTreeData);\r\n                    } else {\r\n                        // Lazy loaded children\r\n                        this.loadTreeNodes(node, cb);\r\n                    }\r\n                },\r\n                themes: {\r\n                    icons: true,\r\n                },\r\n            },\r\n            checkbox: {\r\n                three_state: false,\r\n            },\r\n            plugins: [\r\n                'checkbox',\r\n            ],\r\n        };\r\n\r\n        $container.jstree(treeOptions);\r\n    }\r\n\r\n    initFacetedSearch() {\r\n        const $productListingContainer = $('#product-listing-container');\r\n        const $facetedSearchContainer = $('#faceted-search-container');\r\n        const $searchHeading = $('#search-results-heading');\r\n        const $searchCount = $('#search-results-product-count');\r\n        const productsPerPage = this.context.searchProductsPerPage;\r\n        const requestOptions = {\r\n            template: {\r\n                productListing: 'f/search/product-listing',\r\n                sidebar: 'search/sidebar',\r\n                heading: 'f/search/heading',\r\n                productCount: 'search/product-count',\r\n            },\r\n            config: {\r\n                product_results: {\r\n                    limit: productsPerPage,\r\n                },\r\n            },\r\n            showMore: 'search/show-more',\r\n        };\r\n\r\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\r\n            $productListingContainer.html(content.productListing);\r\n            $facetedSearchContainer.html(content.sidebar);\r\n            $searchHeading.html(content.heading);\r\n            $searchCount.html(content.productCount);\r\n\r\n            $('html, body').animate({\r\n                scrollTop: 0,\r\n            }, 100);\r\n\r\n            cardAddToCart();\r\n            gridSwitcher(this.context);\r\n\r\n            if (this.context.enableSideCart) {\r\n                sideCart();\r\n            }\r\n        });\r\n    }\r\n\r\n    initValidation($form) {\r\n        this.$form = $form;\r\n        this.validator = nod({\r\n            submit: $form,\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    bindValidation($element) {\r\n        if (this.validator) {\r\n            this.validator.add({\r\n                selector: $element,\r\n                validate: 'presence',\r\n                errorMessage: $element.data('errorMessage'),\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    check() {\r\n        if (this.validator) {\r\n            this.validator.performCheck();\r\n            return this.validator.areAll('valid');\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","const forms = {\r\n    email(value) {\r\n        const re = /^.+@.+\\..+/;\r\n        return re.test(value);\r\n    },\r\n\r\n    /**\r\n     * Validates a password field\r\n     * @param value\r\n     * @returns {boolean}\r\n     */\r\n    password(value) {\r\n        return this.notEmpty(value);\r\n    },\r\n\r\n    /**\r\n     * validates if a field is empty\r\n     * @param value\r\n     * @returns {boolean}\r\n     *\r\n     */\r\n    notEmpty(value) {\r\n        return value.length > 0;\r\n    },\r\n};\r\n\r\nexport default forms;\r\n","import _ from 'lodash';\r\nimport nod from './nod';\r\nimport forms from './models/forms';\r\n\r\nconst inputTagNames = [\r\n    'input',\r\n    'select',\r\n    'textarea',\r\n];\r\n\r\n/**\r\n * Apply class name to an input element on its type\r\n * @param {object} input\r\n * @param {string} formFieldClass\r\n * @return {object} Element itself\r\n */\r\nfunction classifyInput(input, formFieldClass) {\r\n    const $input = $(input);\r\n    const $formField = $input.parent(`.${formFieldClass}`);\r\n    const tagName = $input.prop('tagName').toLowerCase();\r\n\r\n    let className = `${formFieldClass}--${tagName}`;\r\n    let specificClassName;\r\n\r\n    // Input can be text/checkbox/radio etc...\r\n    if (tagName === 'input') {\r\n        const inputType = $input.prop('type');\r\n\r\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\r\n            // ie: .form-field--checkbox, .form-field--radio\r\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\r\n        } else {\r\n            // ie: .form-field--input .form-field--inputText\r\n            specificClassName = `${className}${_.capitalize(inputType)}`;\r\n        }\r\n    }\r\n\r\n    // Apply class modifier\r\n    return $formField\r\n        .addClass(className)\r\n        .addClass(specificClassName);\r\n}\r\n\r\n/**\r\n * Apply class name to each input element in a form based on its type\r\n * @example\r\n * // Before\r\n * <form id=\"form\">\r\n *     <div class=\"form-field\">\r\n *         <input type=\"text\">\r\n *     </div>\r\n *     <div class=\"form-field\">\r\n *         <select>...</select>\r\n *     </div>\r\n * </form>\r\n *\r\n * classifyForm('#form', { formFieldClass: 'form-field' });\r\n *\r\n * // After\r\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\r\n * <div class=\"form-field form-field--select\">...</div>\r\n *\r\n * @param {string|object} formSelector - selector or element\r\n * @param {object} options\r\n * @return {jQuery} Element itself\r\n */\r\nexport function classifyForm(formSelector, options = {}) {\r\n    const $form = $(formSelector);\r\n    const $inputs = $form.find(inputTagNames.join(', '));\r\n\r\n    // Obtain options\r\n    const { formFieldClass = 'form-field' } = options;\r\n\r\n    // Classify each input in a form\r\n    $inputs.each((__, input) => {\r\n        classifyInput(input, formFieldClass);\r\n    });\r\n\r\n    return $form;\r\n}\r\n\r\n/**\r\n * Get id from given field\r\n * @param {object} $field JQuery field object\r\n * @return {string}\r\n */\r\nfunction getFieldId($field) {\r\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\r\n\r\n    if (fieldId && fieldId.length !== 0) {\r\n        return fieldId[0];\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\n/**\r\n * Insert hidden field after State/Province field\r\n * @param {object} $stateField JQuery field object\r\n */\r\nfunction insertStateHiddenField($stateField) {\r\n    const fieldId = getFieldId($stateField);\r\n    const stateFieldAttrs = {\r\n        type: 'hidden',\r\n        name: `FormFieldIsText${fieldId}`,\r\n        value: '1',\r\n    };\r\n\r\n    $stateField.after($('<input />', stateFieldAttrs));\r\n}\r\n\r\nconst Validators = {\r\n    /**\r\n     * Sets up a new validation when the form is dirty\r\n     * @param validator\r\n     * @param field\r\n     */\r\n    setEmailValidation: (validator, field) => {\r\n        if (field) {\r\n            validator.add({\r\n                selector: field,\r\n                validate: (cb, val) => {\r\n                    const result = forms.email(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a valid email.',\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Validate password fields\r\n     * @param validator\r\n     * @param passwordSelector\r\n     * @param password2Selector\r\n     * @param requirements\r\n     * @param isOptional\r\n     */\r\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\r\n        const $password = $(passwordSelector);\r\n        const passwordValidations = [\r\n            {\r\n                selector: passwordSelector,\r\n                validate: (cb, val) => {\r\n                    const result = val.length;\r\n\r\n                    if (isOptional) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a password.',\r\n            },\r\n            {\r\n                selector: passwordSelector,\r\n                validate: (cb, val) => {\r\n                    const result = val.match(new RegExp(requirements.alpha))\r\n                        && val.match(new RegExp(requirements.numeric))\r\n                        && val.length >= requirements.minlength;\r\n\r\n                    // If optional and nothing entered, it is valid\r\n                    if (isOptional && val.length === 0) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: requirements.error,\r\n            },\r\n            {\r\n                selector: password2Selector,\r\n                validate: (cb, val) => {\r\n                    const result = val.length;\r\n\r\n                    if (isOptional) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a password.',\r\n            },\r\n            {\r\n                selector: password2Selector,\r\n                validate: (cb, val) => {\r\n                    const result = val === $password.val();\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'Your passwords do not match.',\r\n            },\r\n        ];\r\n\r\n        validator.add(passwordValidations);\r\n    },\r\n\r\n    /**\r\n     * Validate password fields\r\n     * @param {Nod} validator\r\n     * @param {Object} selectors\r\n     * @param {string} selectors.errorSelector\r\n     * @param {string} selectors.fieldsetSelector\r\n     * @param {string} selectors.formSelector\r\n     * @param {string} selectors.maxPriceSelector\r\n     * @param {string} selectors.minPriceSelector\r\n     */\r\n    setMinMaxPriceValidation: (validator, selectors) => {\r\n        const {\r\n            errorSelector,\r\n            fieldsetSelector,\r\n            formSelector,\r\n            maxPriceSelector,\r\n            minPriceSelector,\r\n        } = selectors;\r\n\r\n        validator.configure({\r\n            form: formSelector,\r\n            preventSubmit: true,\r\n            successClass: '_', // KLUDGE: Don't apply success class\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min price must be less than max. price.',\r\n            selector: minPriceSelector,\r\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min price must be less than max. price.',\r\n            selector: maxPriceSelector,\r\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Max. price is required.',\r\n            selector: maxPriceSelector,\r\n            validate: 'presence',\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min. price is required.',\r\n            selector: minPriceSelector,\r\n            validate: 'presence',\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Input must be greater than 0.',\r\n            selector: [minPriceSelector, maxPriceSelector],\r\n            validate: 'min-number:0',\r\n        });\r\n\r\n        validator.setMessageOptions({\r\n            selector: [minPriceSelector, maxPriceSelector],\r\n            parent: fieldsetSelector,\r\n            errorSpan: errorSelector,\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets up a new validation when the form is dirty\r\n     * @param validator\r\n     * @param field\r\n     */\r\n    setStateCountryValidation: (validator, field) => {\r\n        if (field) {\r\n            validator.add({\r\n                selector: field,\r\n                validate: 'presence',\r\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes classes from dirty form if previously checked\r\n     * @param field\r\n     */\r\n    cleanUpStateValidation: (field) => {\r\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\r\n\r\n        Object.keys(nod.classes).forEach((value) => {\r\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\r\n                $fieldClassElement.removeClass(nod.classes[value]);\r\n            }\r\n        });\r\n    },\r\n};\r\n\r\nexport { Validators, insertStateHiddenField };\r\n","import Url from 'url';\r\n\r\nconst urlUtils = {\r\n    getUrl: () => `${window.location.pathname}${window.location.search}`,\r\n\r\n    goToUrl: (url) => {\r\n        window.history.pushState({}, document.title, url);\r\n        $(window).trigger('statechange');\r\n    },\r\n\r\n    searchGoToUrl: () => {\r\n        $(window).trigger('statechange');\r\n    },\r\n\r\n    replaceParams: (url, params) => {\r\n        const parsed = Url.parse(url, true);\r\n        let param;\r\n\r\n        // Let the formatter use the query object to build the new url\r\n        parsed.search = null;\r\n\r\n        for (param in params) {\r\n            if (params.hasOwnProperty(param)) {\r\n                parsed.query[param] = params[param];\r\n            }\r\n        }\r\n\r\n        return Url.format(parsed);\r\n    },\r\n\r\n    buildQueryString: (queryData) => {\r\n        let out = '';\r\n        let key;\r\n        for (key in queryData) {\r\n            if (queryData.hasOwnProperty(key)) {\r\n                if (Array.isArray(queryData[key])) {\r\n                    let ndx;\r\n\r\n                    for (ndx in queryData[key]) {\r\n                        if (queryData[key].hasOwnProperty(ndx)) {\r\n                            out += `&${key}=${queryData[key][ndx]}`;\r\n                        }\r\n                    }\r\n                } else {\r\n                    out += `&${key}=${queryData[key]}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return out.substring(1);\r\n    },\r\n};\r\n\r\nexport default urlUtils;\r\n","import _ from 'lodash';\r\nimport { showAlertModal } from './modal';\r\n\r\nfunction decrementCounter(counter, item) {\r\n    const index = counter.indexOf(item);\r\n\r\n    if (index > -1) {\r\n        counter.splice(index, 1);\r\n    }\r\n}\r\n\r\nfunction incrementCounter(counter, item) {\r\n    counter.push(item);\r\n}\r\n\r\nfunction updateCounterNav(counter, $link, urlContext) {\r\n    if (counter.length !== 0) {\r\n        if (!$link.is('visible')) {\r\n            $link.addClass('show');\r\n        }\r\n        $link.attr('href', `${urlContext.compare}/${counter.join('/')}`);\r\n        $link.find('span.countPill').html(counter.length);\r\n    } else {\r\n        $link.removeClass('show');\r\n    }\r\n}\r\n\r\nexport default function (urlContext) {\r\n    let products;\r\n\r\n    const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\r\n    const $compareLink = $('a[data-compare-nav]');\r\n\r\n    if ($checked.length !== 0) {\r\n        products = _.map($checked, element => element.value);\r\n\r\n        updateCounterNav(products, $compareLink, urlContext);\r\n    }\r\n\r\n    const compareCounter = products || [];\r\n\r\n    $('body').on('click', '[data-compare-id]', event => {\r\n        const product = event.currentTarget.value;\r\n        const $clickedCompareLink = $('a[data-compare-nav]');\r\n\r\n        if (event.currentTarget.checked) {\r\n            incrementCounter(compareCounter, product);\r\n        } else {\r\n            decrementCounter(compareCounter, product);\r\n        }\r\n\r\n        updateCounterNav(compareCounter, $clickedCompareLink, urlContext);\r\n    });\r\n\r\n    $('body').on('submit', '[data-product-compare]', event => {\r\n        const $this = $(event.currentTarget);\r\n        const productsToCompare = $this.find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        if (productsToCompare.length <= 1) {\r\n            showAlertModal('You must select at least two products to compare');\r\n            event.preventDefault();\r\n        }\r\n    });\r\n\r\n    $('body').on('click', 'a[data-compare-nav]', () => {\r\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        if ($clickedCheckedInput.length <= 1) {\r\n            showAlertModal('You must select at least two products to compare');\r\n            return false;\r\n        }\r\n    });\r\n}\r\n","import PageManager from './page-manager';\r\nimport urlUtils from './common/url-utils';\r\nimport Url from 'url';\r\n\r\nexport default class CatalogPage extends PageManager {\r\n    onSortBySubmit(event) {\r\n        const url = Url.parse(window.location.href, true);\r\n        const queryParams = $(event.currentTarget).serialize().split('=');\r\n\r\n        url.query[queryParams[0]] = queryParams[1];\r\n        delete url.query.page;\r\n\r\n        event.preventDefault();\r\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\r\n    }\r\n}\r\n","import { hooks, api } from '@bigcommerce/stencil-utils';\r\nimport _ from 'lodash';\r\nimport Url from 'url';\r\nimport urlUtils from './url-utils';\r\nimport modalFactory from '../global/modal';\r\nimport collapsibleFactory from './collapsible';\r\nimport { Validators } from './form-utils';\r\nimport nod from './nod';\r\n\r\n/**\r\n * Faceted search view component\r\n */\r\nclass FacetedSearch {\r\n    /**\r\n     * @param {object} requestOptions - Object with options for the ajax requests\r\n     * @param {function} callback - Function to execute after fetching templates\r\n     * @param {object} options - Configurable options\r\n     * @example\r\n     *\r\n     * let requestOptions = {\r\n     *      templates: {\r\n     *          productListing: 'f/category/product-listing',\r\n     *          sidebar: 'category/sidebar'\r\n     *     }\r\n     * };\r\n     *\r\n     * let templatesDidLoad = function(content) {\r\n     *     $productListingContainer.html(content.productListing);\r\n     *     $facetedSearchContainer.html(content.sidebar);\r\n     * };\r\n     *\r\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\r\n     */\r\n    constructor(requestOptions, callback, options) {\r\n        const defaultOptions = {\r\n            accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\r\n            blockerSelector: '#facetedSearch .blocker',\r\n            clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\r\n            componentSelector: '#facetedSearch-navList',\r\n            facetNavListSelector: '#facetedSearch .navList',\r\n            priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\r\n            priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\r\n            priceRangeFormSelector: '#facet-range-form',\r\n            priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\r\n            priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\r\n            showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\r\n            facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\r\n            modal: modalFactory('#modal')[0],\r\n            modalOpen: false,\r\n        };\r\n\r\n        // Private properties\r\n        this.requestOptions = requestOptions;\r\n        this.callback = callback;\r\n        this.options = _.extend({}, defaultOptions, options);\r\n        this.collapsedFacets = [];\r\n        this.collapsedFacetItems = [];\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Show limited items by default\r\n        $(this.options.facetNavListSelector).each((index, navList) => {\r\n            this.collapseFacetItems($(navList));\r\n        });\r\n\r\n        // Mark initially collapsed accordions\r\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n            if (collapsible.isCollapsed) {\r\n                this.collapsedFacets.push(collapsible.targetId);\r\n            }\r\n        });\r\n\r\n        // Collapse all facets if initially hidden\r\n        // NOTE: Need to execute after Collapsible gets bootstrapped\r\n        setTimeout(() => {\r\n            if ($(this.options.componentSelector).is(':hidden')) {\r\n                this.collapseAllFacets();\r\n            }\r\n        });\r\n\r\n        // Observe DOM events\r\n        window.onpopstate = () => {\r\n            $(window).trigger('statechange');\r\n        };\r\n\r\n        // Observe user events\r\n        this.onStateChange = this.onStateChange.bind(this);\r\n        this.onToggleClick = this.onToggleClick.bind(this);\r\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\r\n        this.onClearFacet = this.onClearFacet.bind(this);\r\n        this.onFacetClick = this.onFacetClick.bind(this);\r\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\r\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n        this.filterFacetItems = this.filterFacetItems.bind(this);\r\n\r\n        this.bindEvents();\r\n    }\r\n\r\n    // Public methods\r\n    refreshView(content) {\r\n        if (content) {\r\n            this.callback(content);\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Restore view state\r\n        this.restoreCollapsedFacets();\r\n        this.restoreCollapsedFacetItems();\r\n\r\n        // Bind events\r\n        this.bindEvents();\r\n    }\r\n\r\n    updateView() {\r\n        $(this.options.blockerSelector).show();\r\n\r\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\r\n            $(this.options.blockerSelector).hide();\r\n\r\n            if (err) {\r\n                throw new Error(err);\r\n            }\r\n\r\n            // Refresh view with new content\r\n            this.refreshView(content);\r\n        });\r\n    }\r\n\r\n    expandFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Remove\r\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n    }\r\n\r\n    collapseFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n        const hasMoreResults = $navList.data('hasMoreResults');\r\n\r\n        if (hasMoreResults) {\r\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\r\n        } else {\r\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n        }\r\n    }\r\n\r\n    toggleFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Toggle depending on `collapsed` flag\r\n        if (_.includes(this.collapsedFacetItems, id)) {\r\n            this.getMoreFacetResults($navList);\r\n\r\n            return true;\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    getMoreFacetResults($navList) {\r\n        const facet = $navList.data('facet');\r\n        const facetUrl = urlUtils.getUrl();\r\n\r\n        if (this.requestOptions.showMore) {\r\n            api.getPage(facetUrl, {\r\n                template: this.requestOptions.showMore,\r\n                params: {\r\n                    list_all: facet,\r\n                },\r\n            }, (err, response) => {\r\n                if (err) {\r\n                    throw new Error(err);\r\n                }\r\n\r\n                this.options.modal.open();\r\n                this.options.modalOpen = true;\r\n                this.options.modal.updateContent(response);\r\n            });\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    filterFacetItems(event) {\r\n        const $items = $('.navList-item');\r\n        const query = $(event.currentTarget).val().toLowerCase();\r\n\r\n        $items.each((index, element) => {\r\n            const text = $(element).text().toLowerCase();\r\n            if (text.indexOf(query) !== -1) {\r\n                $(element).show();\r\n            } else {\r\n                $(element).hide();\r\n            }\r\n        });\r\n    }\r\n\r\n    expandFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.open();\r\n    }\r\n\r\n    collapseFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.close();\r\n    }\r\n\r\n    collapseAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.collapseFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    expandAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.expandFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    // Private methods\r\n    initPriceValidator() {\r\n        if ($(this.options.priceRangeFormSelector).length === 0) {\r\n            return;\r\n        }\r\n\r\n        const validator = nod();\r\n        const selectors = {\r\n            errorSelector: this.options.priceRangeErrorSelector,\r\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\r\n            formSelector: this.options.priceRangeFormSelector,\r\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\r\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\r\n        };\r\n\r\n        Validators.setMinMaxPriceValidation(validator, selectors);\r\n\r\n        this.priceRangeValidator = validator;\r\n    }\r\n\r\n    restoreCollapsedFacetItems() {\r\n        const $navLists = $(this.options.facetNavListSelector);\r\n\r\n        // Restore collapsed state for each facet\r\n        $navLists.each((index, navList) => {\r\n            const $navList = $(navList);\r\n            const id = $navList.attr('id');\r\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacetItems($navList);\r\n            } else {\r\n                this.expandFacetItems($navList);\r\n            }\r\n        });\r\n    }\r\n\r\n    restoreCollapsedFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n            const id = collapsible.targetId;\r\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacet($accordionToggle);\r\n            } else {\r\n                this.expandFacet($accordionToggle);\r\n            }\r\n        });\r\n    }\r\n\r\n    bindEvents() {\r\n        // Clean-up\r\n        this.unbindEvents();\r\n\r\n        // DOM events\r\n        $(window).on('statechange', this.onStateChange);\r\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    unbindEvents() {\r\n        // DOM events\r\n        $(window).off('statechange', this.onStateChange);\r\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    onClearFacet(event) {\r\n        const $link = $(event.currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    onToggleClick(event) {\r\n        const $toggle = $(event.currentTarget);\r\n        const $navList = $($toggle.attr('href'));\r\n\r\n        // Prevent default\r\n        event.preventDefault();\r\n\r\n        // Toggle visible items\r\n        this.toggleFacetItems($navList);\r\n    }\r\n\r\n    onFacetClick(event) {\r\n        const $link = $(event.currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n\r\n        $link.toggleClass('is-selected');\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n\r\n        if (this.options.modalOpen) {\r\n            this.options.modal.close();\r\n        }\r\n    }\r\n\r\n    onSortBySubmit(event) {\r\n        const url = Url.parse(window.location.href, true);\r\n        const queryParams = $(event.currentTarget).serialize().split('=');\r\n\r\n        url.query[queryParams[0]] = queryParams[1];\r\n        delete url.query.page;\r\n\r\n        event.preventDefault();\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) }));\r\n    }\r\n\r\n    onRangeSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\r\n            return;\r\n        }\r\n\r\n        const url = Url.parse(window.location.href);\r\n        const queryParams = decodeURI($(event.currentTarget).serialize());\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: `?${queryParams}` }));\r\n    }\r\n\r\n    onStateChange() {\r\n        this.updateView();\r\n    }\r\n\r\n    onAccordionToggle(event) {\r\n        const $accordionToggle = $(event.currentTarget);\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n        const id = collapsible.targetId;\r\n\r\n        if (collapsible.isCollapsed) {\r\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\r\n        } else {\r\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\r\n        }\r\n    }\r\n}\r\n\r\nexport default FacetedSearch;\r\n"],"sourceRoot":""}